import asyncio
import requests
import schedule
import time
from telegram import Bot

# ‚úÖ TOKEN –≤–∞ ID-–∏ –∫–∞–Ω–∞–ª–∞—Ç–æ–Ω—Ä–æ –≥—É–∑–æ—Ä–µ–¥
TOKEN = "7921330837:AAHMiuINHSJADbNXcJm2DrN1kUgKbq_zGEk"
CHANNEL_ID = "@behruz_invest"
  # ID —ë username-–∏ –∫–∞–Ω–∞–ª–∏ Telegram

# ‚úÖ API-–∫–ª—é—á–∏ Binance-–∏ —Ö—É–¥—Ä–æ –¥–∞—Ä –∏–Ω “∑–æ –≥—É–∑–æ—Ä–µ–¥
API_KEY = "50brSZidvxOdFpDwpDKebb9MNmzgl8d1cvLfkFa4aklhqjANWJ2Nc51mL6VaqYs8"

bot = Bot(token=TOKEN)

# ‚úÖ –§—É–Ω–∫—Å–∏—è –±–∞—Ä–æ–∏ –≥–∏—Ä–∏—Ñ—Ç–∞–Ω–∏ –Ω–∞—Ä—Ö–∏ –∫—Ä–∏–ø—Ç–æ –∞–∑ Binance –±–æ API-–∫–ª—é—á
def get_crypto_prices_binance():
    headers = {
        "X-MBX-APIKEY": API_KEY
    }
    url = "https://api.binance.com/api/v3/ticker/price"
    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        data = response.json()

        # –ì–∏—Ä–∏—Ñ—Ç–∞–Ω–∏ –Ω–∞—Ä—Ö–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç“≥–æ–∏ –ª–æ–∑–∏–º”£
        btc_price = next(item for item in data if item["symbol"] == "BTCUSDT")["price"]
        eth_price = next(item for item in data if item["symbol"] == "ETHUSDT")["price"]
        sol_price = next(item for item in data if item["symbol"] == "SOLUSDT")["price"]

        # –§–æ—Ä–º–∞—Ç–∫—É–Ω–∏–∏ –ø–∞—ë–º
        message = "üìä –ù–∞—Ä—Ö–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç“≥–æ –∞–∑ Binance:\n\n"
        message += f"üîπ *Bitcoin (BTC)*: ${float(btc_price):,.2f}\n"
        message += f"üîπ *Ethereum (ETH)*: ${float(eth_price):,.2f}\n"
        message += f"üîπ *Solana (SOL)*: ${float(sol_price):,.2f}\n"

        return message
    else:
        return "‚ùå –•–∞—Ç–æ “≥–∞–Ω–≥–æ–º–∏ –≥–∏—Ä–∏—Ñ—Ç–∞–Ω–∏ –Ω–∞—Ä—Ö–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç“≥–æ –∞–∑ Binance!"

# ‚úÖ –§—É–Ω–∫—Å–∏—è –±–∞—Ä–æ–∏ –∏—Ä—Å–æ–ª–∏ –Ω–∞—Ä—Ö“≥–æ
async def send_crypto_prices():
    try:
        message = get_crypto_prices_binance()
        await bot.send_message(chat_id=CHANNEL_ID, text=message, parse_mode="Markdown")
        print("‚úÖ –ù–∞—Ä—Ö–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç“≥–æ –±–∞ –∫–∞–Ω–∞–ª —Ñ–∏—Ä–∏—Å—Ç–æ–¥–∞ —à—É–¥!")
    except Exception as e:
        print(f"‚ùå –•–∞—Ç–æ “≥–∞–Ω–≥–æ–º–∏ —Ñ–∏—Ä–∏—Å—Ç–æ–¥–∞–Ω–∏ –Ω–∞—Ä—Ö–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç“≥–æ: {e}")

# ‚úÖ –¢–∞–Ω–∑–∏–º–∏ –∏—Ä—Å–æ–ª–∏ –∞–≤—Ç–æ–º–∞—Ç”£
schedule.every().day.at("08:00").do(lambda: asyncio.run(send_crypto_prices()))

# ‚úÖ –§—É–Ω–∫—Å–∏—è–∏ –∏–¥–æ—Ä–∞–∫—É–Ω”£
def run_scheduler():
    while True:
        schedule.run_pending()
        time.sleep(60)  # “≤–∞—Ä 60 —Å–æ–Ω–∏—è —Å–∞–Ω“∑–∏—à –º–µ–∫—É–Ω–∞–¥

if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –æ“ì–æ–∑ —à—É–¥...")
    run_scheduler()
